generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "mysql"
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model games {
  id       Int           @default(autoincrement())
  name     String        @db.VarChar(200)
  image    String?       @db.Text
  notes    String?       @db.VarChar(1000)
  start    DateTime?     @db.Date
  finish   DateTime?     @db.Date
  platinum DateTime?     @db.Date
  status   games_status?
  saved    Boolean?
  users_id Int
  users    users         @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_games_users")

  @@id([id, users_id])
  @@index([users_id], map: "fk_games_users_idx")
}

model series {
  id       Int            @default(autoincrement())
  name     String         @db.VarChar(200)
  image    String?        @db.Text
  notes    String?        @db.VarChar(1000)
  start    DateTime?      @db.Date
  finish   DateTime?      @db.Date
  last_ep  String?        @db.VarChar(50)
  status   series_status?
  saved    Boolean?
  users_id Int
  users    users          @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_series_users1")

  @@id([id, users_id])
  @@index([users_id], map: "fk_series_users1_idx")
}

model users {
  id      Int       @id @default(autoincrement())
  email   String    @unique(map: "unique-email") @db.VarChar(200)
  pass    String    @db.Text
  games   games[]
  series  series[]
  session session[]
}

model session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique @db.VarChar(1000)
  createdAt DateTime @default(now())
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "userId")
}

enum games_status {
  Jogando
  Zerado
  Platinado
}

enum series_status {
  Assistindo
  Finalizado
  Assistir_mais_tarde @map("Assistir mais tarde")
}
